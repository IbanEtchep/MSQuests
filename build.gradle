plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.2.20' apply false
    id 'io.github.goooler.shadow' version '8.1.7' apply false
}

allprojects {
    group = 'com.github.ibanetchep.msquests'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
        maven { url = uri("https://repo.tcoded.com/releases") }
    }
}

subprojects {
    apply plugin: 'java'

    def targetJavaVersion = 21
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.compilerArgs += ["-parameters"]

        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release.set(targetJavaVersion)
        }
    }

    tasks.named('test', Test) {
        useJUnitPlatform()

        maxHeapSize = '1G'

        testLogging {
            events("passed", "skipped", "failed")
            exceptionFormat = 'full'
            showExceptions = true
            showCauses = true
            showStackTraces = true
        }
    }

    dependencies {
        testImplementation("org.junit.jupiter:junit-jupiter:5.12.1")
        testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    }
}